#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
CS 242: Lecture 1
\end_layout

\begin_layout Itemize
Languge, Syntax, Semantics
\end_layout

\begin_layout Itemize
Model 1: input, source code >> interpretor >> output
\end_layout

\begin_layout Itemize
Model 2: source code > compiler, input, >> program >> output
\end_layout

\begin_layout Itemize
Compiler: 
\end_layout

\begin_deeper
\begin_layout Itemize
Source code (string)
\end_layout

\begin_layout Itemize
Lexer (unstructured string of characters turn into tokens (variable names
 etc)
\end_layout

\begin_layout Itemize
Parser (takes stream of tokens, interpret it into abstract syntax tree)
 >> AST
\end_layout

\begin_layout Itemize
Type checker (make sure that abstract syntax tree makes sense) - AST
\end_layout

\begin_layout Itemize
IR generator: translates the AST into a simpler language that is less expresive
 (not what you would write your language in)
\end_layout

\begin_layout Itemize
Optimizer: takes IR and does inlining, etc.
\end_layout

\begin_layout Itemize
Backend code generator to produce the object code you want to run.
\end_layout

\end_deeper
\begin_layout Itemize
Abstract Syntax Trees
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $2\times3+4$
\end_inset

.
 >> precedence rules, etc.
\end_layout

\begin_layout Itemize
Grammer:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $e=n$
\end_inset

, 
\begin_inset Formula $|e+e$
\end_inset

, 
\begin_inset Formula $|e\times e$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
sytax is inductively generated by the grammer tree.
\end_layout

\begin_layout Itemize
\begin_inset Formula $e\rightarrow e+e\rightarrow(e\times e)+e$
\end_inset


\end_layout

\end_deeper
\end_body
\end_document
